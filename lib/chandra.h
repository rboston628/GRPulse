
#ifndef CHANDRACONSTH
#define CHANDRACONSTH

#include "../src/constants.h"

namespace Chandrasekhar {
//	const double A0 = 6.002332e22;
//	const double B0 = 9.81019e5;
	const double A0 = 6.0406e22;
	const double B0 = 9.8848e5;

	double factor_f(double x);
	double factor_g(double x);
	double factor_h(double x, double, double);
};

namespace FermiDirac {
	//Abscissae (x) and weights (w) for 24-point Gauss quadrature method due to Sagar 1991
	static const double xFermiDirac1Half[] = {
		1.065765457622244303e-01, 4.230728669515992804e-01, 9.419850084605768359e-01, 
		1.657367156890049269e+00, 2.570213091710842203e+00, 3.687909918000632621e+00, 
		5.019454072639460885e+00, 6.572842000947019917e+00, 8.355768265288956853e+00, 
		1.037702320147209848e+01, 1.264732820630387383e+01, 1.517981042473563459e+01, 
		1.799049833506082646e+01, 2.109902949629965248e+01, 2.452968403197510593e+01, 
		2.831290225833495608e+01, 3.248757170669172601e+01, 3.710461553062605055e+01, 
		4.223293075368851131e+01, 4.796992232165839131e+01, 5.446202083707815918e+01, 
		6.195032240271386363e+01, 7.089542237979413787e+01, 8.247940908146821374e+01
	};
	static const double wFermiDirac1Half[] = {
		3.285175403357927574e-02, 1.078791300687585500e-01, 1.681544217004087412e-01, 
		1.676417853951022623e-01, 1.155215546646083391e-01, 5.734703122687110474e-02, 
		2.119698568082612045e-02, 5.964995125395940070e-03, 1.290895483684744857e-03, 
		2.150426470522999493e-04, 2.743849918141434060e-05, 2.657145441059904433e-06, 
		1.927749118726048725e-07, 1.029994216793772317e-08, 3.964542390084040303e-10, 
		1.068615276190246333e-11, 1.944313861292386839e-13, 2.274868576285609567e-15, 
		1.602346574894849982e-17, 6.189182148247560184e-20, 1.139569672899732326e-22, 
		7.949390158581847580e-26, 1.359843844790543011e-29, 1.905654458662088918e-34
	};
	static const double xFermiDirac3Half[] = {
		2.129716612278677430e-01, 6.237268702986968508e-01, 1.229403044783669869e+00, 
		2.026961451899495619e+00, 3.020610609609100410e+00, 4.218734197248799002e+00, 
		5.629623967479334623e+00, 7.260592688638248677e+00, 9.119217021840780670e+00, 
		1.121447293177990263e+01, 1.355732211119446176e+01, 1.616111273495549703e+01, 
		1.904207813911802493e+01, 2.222005924434693543e+01, 2.571955002541875886e+01, 
		2.957122636257431200e+01, 3.381424706901884974e+01, 3.849986297339433161e+01, 
		4.369738885284278659e+01, 4.950479735755637819e+01, 5.606935454831911818e+01, 
		6.363352566233777885e+01, 7.266054935122159627e+01, 8.433947217510982230e+01
	};
	static const double wFermiDirac3Half[] = {
		1.365937958895298203e-02, 8.753560954084596397e-02, 2.163878832948606529e-01,
		3.004318314223437617e-01, 2.671800670589929453e-01, 1.637863466848732099e-01,
		7.261338055187011266e-02, 2.395111081211760715e-02, 5.957917543163391603e-03,
		1.122153727092106363e-03, 1.596764308326631934e-04, 1.704826903772844090e-05,
		1.350657256618920433e-06, 7.817363319325411844e-08, 3.237319698904724569e-09,
		9.333854978405723236e-11, 1.807632052729200003e-12, 2.241763132816884723e-14,
		1.667878325117133144e-16, 6.785615480105566540e-19, 1.313183740630591210e-21,
		9.616279005133126237e-25, 1.727051369706408515e-28, 2.549456047069159218e-33
	};
	static const double xFermiDirac5Half[] = {
		3.422156821319662829e-01, 8.434644632641465284e-01, 1.532396544460638270e+00, 
		2.409974354200374472e+00, 3.482882831159288010e+00, 4.759639243863683690e+00, 
		6.247759918994630441e+00, 7.954146727611163367e+00, 9.886421301541225215e+00, 
		1.205377252717992426e+01, 1.446738372295618009e+01, 1.714080389169575934e+01, 
		2.009045683883463495e+01, 2.333637615550461493e+01, 2.690326073526996817e+01, 
		3.082201391097157481e+01, 3.513205798444946900e+01, 3.988496357316911226e+01, 
		4.515045472834709800e+01, 5.102706194618288853e+01, 5.766287403453427061e+01, 
		6.530170651996465864e+01, 7.440940721694892776e+01, 8.618189363225279673e+01
	};
	static const double wFermiDirac5Half[] = {
		1.156875083599599910e-02, 1.170293449794717130e-01, 4.040945556823653779e-01, 
		7.236312791373911478e-01, 7.917373471518581726e-01, 5.799992638904753491e-01, 
		3.007177501667138216e-01, 1.138861544833988782e-01, 3.201210622537985194e-02, 
		6.721349241397831141e-03, 1.054098130731385803e-03, 1.228570478281638447e-04, 
		1.053984817271198724e-05, 6.560497130547129842e-07, 2.904716849877691045e-08, 
		8.909289940219604541e-10, 1.827655298772768217e-11, 2.392185495248132500e-13, 
		1.872698757697392744e-15, 7.996932286473866299e-18, 1.621431452583757569e-20, 
		1.242727249852022253e-23, 2.336588459348587113e-27, 3.622936475852263175e-32
	};


	double FermiDirac(double k, double eta);
	double FermiDirac(double k, double eta, double beta);
	double FermiDiracdelEta(double k, double eta, double beta);
	double FermiDiracdelBeta(double k, double eta, double beta);
	
	
	//special cases
	double FermiDirac1Half(double eta, double beta);
	double FermiDirac3Half(double eta, double beta);
	double FermiDirac5Half(double eta, double beta);
	
	//partial derivatives of the special cases
	double FermiDirac1HalfdelEta(double eta, double beta);
	double FermiDirac3HalfdelEta(double eta, double beta);
	double FermiDirac5HalfdelEta(double eta, double beta);
	double FermiDirac1HalfdelBeta(double eta, double beta);
	double FermiDirac3HalfdelBeta(double eta, double beta);
	double FermiDirac5HalfdelBeta(double eta, double beta);
	
	
	//asymptotic limit for large degeneracy
	double FermiDiracEtaLarge1Half(double eta);
	double FermiDiracEtaLarge3Half(double eta);
	double FermiDiracEtaLarge5Half(double eta);
	double FermiDiracEtaLarge1Half(double eta, double beta);
	double FermiDiracEtaLarge3Half(double eta, double beta);
	double FermiDiracEtaLarge5Half(double eta, double beta);
	//the little-f functions of the asymptotic limit
	// see Cox and Giuli, or Pichon 1989, eq 27-29
	double FermiDiracLittleF1Half(double y);
	double FermiDiracLittleF3Half(double y);
	double FermiDiracLittleF5Half(double y);
}

#endif